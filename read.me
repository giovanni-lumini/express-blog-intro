Esercizio
Creiamo il nostro blog personale e giorno dopo giorno lo potremo arricchire con nuove funzionalità.

1-Creiamo il progetto base con una rotta / che ritorna un h1 con scritto Benvenuto nel mio blog!    //FATTO

2-Creiamo un array dove inserire una lista di almeno 5 post, per ognuno indicare titolo, contenuto, immagine e tags (tags è un array di stringhe)   //FATTO

3-Creiamo poi una rotta /posts che restituisca un oggetto json con la lista dei post e il conteggio, partendo da un array locale.
La rotta relativa ai post dovrà chiamare la funzione index() dal controller dedicato ( controllers/posts.js )
Configuriamo gli asset statici sull’applicazione in modo che si possano visualizzare le immagini associate ad ogni post.
Testare nel browser.

Bonus
Spostiamo l’array dei post in un file separato da importare poi dentro il controller
Creare una nuova rotta con cui stampare la lista in html come ul
Create una pagina statica html da cui far partire una chiamata ajax per consumare il vostro enpoint json.



ISTRUZIONI:
1-nel terminale: npm init (inserie nel file che viene creato di nome package.json "start": "node nomfile.js")


2-nel terminale: npm install express


3-creare file .gitignore e scrivere all'interno: node_modules/ , così questa parte che non serve non viene caricata nella repository


4-Copiamo da express il codice per creare il server:

const express = require('express')    //importiamo express
const app = express()   //inizializziamo express
const port = 3000

app.get('/', (req, res) => {    //definiamo le rotte
  res.send('Hello World!')
})

app.listen(port, () => {    //avviamo il server
  console.log(`Example app listening on port ${port}`)
})


5-nel terminale: npm run start (per avviare il server)


6-creare la cartella "controllers" per separare la logica dalla visualizzazione o manipolazione dei dati
All'interno di questa cartella creiamo i file.js con ad esempio le funzioni che vogliamo associare (export/import) con le nostre rotte:
Nella cartella controllers creiamo un file ex. pizze.js:
-in pizze.js:
//exports
module.exports.index = function (req, res){
    res.send("hello word")
}
Nel file principale app.js:
//import
const pizze = require("./controllers/pizze.js");
app.get("/pizze", pizze.index);


7-creare la cartella "public" per salvare i file statici che volgiamo utilizzare (immagini, css, js, ecc)
Questi saranno accessibili direttamente scrivendo il dominio del sito, segutio dal nome del file (ex: http://localhost:3000/logo.png)


8-express non attiva di default questo servizio e quindi lo dobbiamo fare noi:
app.use(express.static("public"));      //alla funzione static diamo il nome della cartella
//si può inserire dopo i const (dopo la const port=...;)


1000-varie per exports ed import:
//export (solo un exports per file)
All'interno della cartella: nome_del_file.js, creo
function sum(){
    code..;
}
module.exports = sum;

//import
const sum(o altro nome) = require("./nome_del_file.js");
Ora posso richiamare la funzione:
sum()